<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nit.city.dao.CoordinateMapper">
    <resultMap id="BaseResultMap" type="com.nit.city.bean.Coordinate">
        <id column="coordinate_id" jdbcType="INTEGER" property="coordinateId"/>
        <result column="latitude" jdbcType="DOUBLE" property="latitude"/>
        <result column="longitude" jdbcType="DOUBLE" property="longitude"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    coordinate_id, latitude, longitude
  </sql>
    <select id="selectByExample" parameterType="com.nit.city.bean.CoordinateExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from city_coordinate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city_coordinate
        where coordinate_id = #{coordinateId,jdbcType=INTEGER}
    </select>
    <select id="selectByImageLatitudeAndImageLongitude" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city_coordinate
        where latitude = #{latitude} and longitude = #{longitude}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city_coordinate
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.nit.city.bean.CoordinateExample">
        delete from city_coordinate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertWithoutId" parameterType="com.nit.city.bean.Coordinate">
    insert into city_coordinate (latitude, longitude)
    values (#{latitude}, #{longitude})
  </insert>
    <insert id="insert" parameterType="com.nit.city.bean.Coordinate">
    insert into city_coordinate (coordinate_id, latitude, longitude
      )
    values (#{coordinateId,jdbcType=INTEGER}, #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.nit.city.bean.Coordinate">
        insert into city_coordinate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="coordinateId != null">
                coordinate_id,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="coordinateId != null">
                #{coordinateId,jdbcType=INTEGER},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.nit.city.bean.CoordinateExample" resultType="java.lang.Long">
        select count(*) from city_coordinate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update city_coordinate
        <set>
            <if test="record.coordinateId != null">
                coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
            </if>
            <if test="record.latitude != null">
                latitude = #{record.latitude,jdbcType=DOUBLE},
            </if>
            <if test="record.longitude != null">
                longitude = #{record.longitude,jdbcType=DOUBLE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update city_coordinate
        set coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
        latitude = #{record.latitude,jdbcType=DOUBLE},
        longitude = #{record.longitude,jdbcType=DOUBLE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.nit.city.bean.Coordinate">
        update city_coordinate
        <set>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE},
            </if>
        </set>
        where coordinate_id = #{coordinateId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nit.city.bean.Coordinate">
    update city_coordinate
    set latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE}
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </update>
</mapper>