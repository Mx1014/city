<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nit.city.dao.MessageMapper">
    <resultMap id="BaseResultMap" type="com.nit.city.bean.Message">
        <id column="message_id" jdbcType="INTEGER" property="messageId"/>
        <result column="message_name" jdbcType="VARCHAR" property="messageName"/>
        <result column="message_description" jdbcType="VARCHAR" property="messageDescription"/>
        <result column="coordinate_id" jdbcType="INTEGER" property="coordinateId"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="result" jdbcType="VARCHAR" property="result"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <collection property="coordinate" ofType="com.nit.city.bean.Coordinate">
            <id column="coordinate_id" property="coordinateId"/>
            <result column="latitude" jdbcType="VARCHAR" property="latitude"/>
            <result column="longitude" jdbcType="VARCHAR" property="longitude"/>
        </collection>
        <collection property="province" ofType="com.nit.city.bean.Province">
            <id column="province_id" property="provinceId"/>
            <result column="province" jdbcType="VARCHAR" property="province"/>
        </collection>
        <collection property="city" ofType="com.nit.city.bean.City">
            <id column="city_id" property="cityId"/>
            <result column="city" jdbcType="VARCHAR" property="city"/>
            <result column="province_id" jdbcType="INTEGER" property="provinceId"/>
        </collection>
        <collection property="district" ofType="com.nit.city.bean.District">
            <id column="district_id" property="districtId"/>
            <result column="district" jdbcType="VARCHAR" property="district"/>
            <result column="city_id" jdbcType="INTEGER" property="cityId"/>
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    message_id, message_name, message_description, coordinate_id, position_id, create_time, 
    result, creator, image_url
  </sql>
    <select id="selectDangerMessage" resultMap="BaseResultMap">
    select
    city_message.*,city_coordinate.latitude,city_coordinate.longitude,city_province.province,
    city_city.city,city_district.district,city_position.*
    from city_message
    inner join city_position
    on (city_message.position_id = city_position.position_id)
    inner join city_coordinate
    on (city_message.coordinate_id = city_coordinate.coordinate_id)
	inner join city_province
	on (city_position.province_id = city_province.province_id)
	inner join city_city
	on (city_position.city_id = city_city.city_id)
	inner join city_district
	on (city_position.district_id = city_district.district_id)
	where city_message.result in ('内涝','冰雪','积水')
  </select>
    <select id="selectAllMessage" resultMap="BaseResultMap">
    select
    city_message.*,city_coordinate.latitude,city_coordinate.longitude,city_province.province,
    city_city.city,city_district.district,city_position.*
    from city_message
    inner join city_position
    on (city_message.position_id = city_position.position_id)
    inner join city_coordinate
    on (city_message.coordinate_id = city_coordinate.coordinate_id)
	inner join city_province
	on (city_position.province_id = city_province.province_id)
	inner join city_city
	on (city_position.city_id = city_city.city_id)
	inner join city_district
	on (city_position.district_id = city_district.district_id)
  </select>
    <select id="selectByExample" parameterType="com.nit.city.bean.MessageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from city_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city_message
        where message_id = #{messageId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.nit.city.bean.MessageExample">
        delete from city_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.nit.city.bean.Message">
    insert into city_message (message_id, message_name, message_description, 
      coordinate_id, position_id, create_time, 
      result, creator, image_url
      )
    values (#{messageId,jdbcType=INTEGER}, #{messageName,jdbcType=VARCHAR}, #{messageDescription,jdbcType=VARCHAR}, 
      #{coordinateId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{result,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.nit.city.bean.Message">
        insert into city_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                message_id,
            </if>
            <if test="messageName != null">
                message_name,
            </if>
            <if test="messageDescription != null">
                message_description,
            </if>
            <if test="coordinateId != null">
                coordinate_id,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="imageUrl != null">
                image_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="messageName != null">
                #{messageName,jdbcType=VARCHAR},
            </if>
            <if test="messageDescription != null">
                #{messageDescription,jdbcType=VARCHAR},
            </if>
            <if test="coordinateId != null">
                #{coordinateId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                #{imageUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.nit.city.bean.MessageExample" resultType="java.lang.Long">
        select count(*) from city_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update city_message
        <set>
            <if test="record.messageId != null">
                message_id = #{record.messageId,jdbcType=INTEGER},
            </if>
            <if test="record.messageName != null">
                message_name = #{record.messageName,jdbcType=VARCHAR},
            </if>
            <if test="record.messageDescription != null">
                message_description = #{record.messageDescription,jdbcType=VARCHAR},
            </if>
            <if test="record.coordinateId != null">
                coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
            </if>
            <if test="record.positionId != null">
                position_id = #{record.positionId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.result != null">
                result = #{record.result,jdbcType=VARCHAR},
            </if>
            <if test="record.creator != null">
                creator = #{record.creator,jdbcType=VARCHAR},
            </if>
            <if test="record.imageUrl != null">
                image_url = #{record.imageUrl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update city_message
        set message_id = #{record.messageId,jdbcType=INTEGER},
        message_name = #{record.messageName,jdbcType=VARCHAR},
        message_description = #{record.messageDescription,jdbcType=VARCHAR},
        coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
        position_id = #{record.positionId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        result = #{record.result,jdbcType=VARCHAR},
        creator = #{record.creator,jdbcType=VARCHAR},
        image_url = #{record.imageUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.nit.city.bean.Message">
        update city_message
        <set>
            <if test="messageName != null">
                message_name = #{messageName,jdbcType=VARCHAR},
            </if>
            <if test="messageDescription != null">
                message_description = #{messageDescription,jdbcType=VARCHAR},
            </if>
            <if test="coordinateId != null">
                coordinate_id = #{coordinateId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                image_url = #{imageUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where message_id = #{messageId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nit.city.bean.Message">
    update city_message
    set message_name = #{messageName,jdbcType=VARCHAR},
      message_description = #{messageDescription,jdbcType=VARCHAR},
      coordinate_id = #{coordinateId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      result = #{result,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>