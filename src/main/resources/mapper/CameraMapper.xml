<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nit.city.dao.CameraMapper">
  <resultMap id="BaseResultMap" type="com.nit.city.bean.Camera">
    <id column="camera_id" jdbcType="INTEGER" property="cameraId" />
    <result column="camera_name" jdbcType="VARCHAR" property="cameraName" />
    <result column="coordinate_id" jdbcType="INTEGER" property="coordinateId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <collection property="province" ofType="com.nit.city.bean.Province">
      <id column="province_id" property="provinceId"/>
      <result column="province" jdbcType="VARCHAR" property="province"/>
    </collection>
    <collection property="city" ofType="com.nit.city.bean.City">
      <id column="city_id" property="cityId"/>
      <result column="city" jdbcType="VARCHAR" property="city"/>
      <result column="province_id" jdbcType="INTEGER" property="provinceId"/>
    </collection>
    <collection property="district" ofType="com.nit.city.bean.District">
      <id column="district_id" property="districtId"/>
      <result column="district" jdbcType="VARCHAR" property="district"/>
      <result column="city_id" jdbcType="INTEGER" property="cityId"/>
    </collection>
    <collection property="position" ofType="com.nit.city.bean.Position">
      <id column="position_id" property="positionId"/>
      <result column="province_id" jdbcType="INTEGER" property="provinceId"/>
      <result column="city_id" jdbcType="INTEGER" property="cityId"/>
      <result column="district_id" jdbcType="INTEGER" property="districtId"/>
    </collection>
    <collection property="coordinate" ofType="com.nit.city.bean.Coordinate">
      <id column="coordinate_id" property="coordinateId"/>
      <result column="latitude" jdbcType="VARCHAR" property="latitude"/>
      <result column="longitude" jdbcType="VARCHAR" property="longitude"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    camera_id, camera_name, coordinate_id, position_id
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    city_camera.*,city_coordinate.*,city_position.*,city_province.province,city_city.city,city_district.district
    from city_camera
    inner join city_coordinate
    on (city_camera.coordinate_id = city_coordinate.coordinate_id)
    inner join city_position
    on (city_camera.position_id = city_position.position_id)
	inner join city_province
	on (city_position.province_id = city_province.province_id)
	inner join city_city
	on (city_position.city_id = city_city.city_id)
	inner join city_district
	on (city_position.district_id = city_district.district_id)
  </select>
  <select id="selectByExample" parameterType="com.nit.city.bean.CameraExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city_camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city_camera
    where camera_id = #{cameraId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city_camera
    where camera_id = #{cameraId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nit.city.bean.CameraExample">
    delete from city_camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nit.city.bean.Camera">
    insert into city_camera (camera_id, camera_name, coordinate_id, 
      position_id)
    values (#{cameraId,jdbcType=INTEGER}, #{cameraName,jdbcType=VARCHAR}, #{coordinateId,jdbcType=INTEGER}, 
      #{positionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nit.city.bean.Camera">
    insert into city_camera
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cameraId != null">
        camera_id,
      </if>
      <if test="cameraName != null">
        camera_name,
      </if>
      <if test="coordinateId != null">
        coordinate_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cameraId != null">
        #{cameraId,jdbcType=INTEGER},
      </if>
      <if test="cameraName != null">
        #{cameraName,jdbcType=VARCHAR},
      </if>
      <if test="coordinateId != null">
        #{coordinateId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nit.city.bean.CameraExample" resultType="java.lang.Long">
    select count(*) from city_camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update city_camera
    <set>
      <if test="record.cameraId != null">
        camera_id = #{record.cameraId,jdbcType=INTEGER},
      </if>
      <if test="record.cameraName != null">
        camera_name = #{record.cameraName,jdbcType=VARCHAR},
      </if>
      <if test="record.coordinateId != null">
        coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update city_camera
    set camera_id = #{record.cameraId,jdbcType=INTEGER},
      camera_name = #{record.cameraName,jdbcType=VARCHAR},
      coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
      position_id = #{record.positionId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nit.city.bean.Camera">
    update city_camera
    <set>
      <if test="cameraName != null">
        camera_name = #{cameraName,jdbcType=VARCHAR},
      </if>
      <if test="coordinateId != null">
        coordinate_id = #{coordinateId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
    </set>
    where camera_id = #{cameraId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nit.city.bean.Camera">
    update city_camera
    set camera_name = #{cameraName,jdbcType=VARCHAR},
      coordinate_id = #{coordinateId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER}
    where camera_id = #{cameraId,jdbcType=INTEGER}
  </update>
</mapper>